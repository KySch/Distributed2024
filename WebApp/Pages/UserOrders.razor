@page "/userorders"
@using System.Net.Http.Json
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@using WebApp.Models
@inject HttpClient Http
@inject ApiAuthenticationStateProvider ApiAuthenticationStateProvider

<PageTitle>Orders</PageTitle>

<h1>My Orders</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (orderData == null)
{
    <p><em>Loading...</em></p>
}
else if (orderData.Count == 0)
{
    <p><em>No orders found.</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Movie Name</th>
                <th>Cost</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var order in orderData)
            {
                var movie = movieData.FirstOrDefault(m => m?.Id == order.MovieId);
                <tr>
                    <td>@movie?.Title</td>
                    <td>10eu</td> 
                </tr>
            }
        </tbody>
    </table>
}


@code {
    private List<Order?> orderData;
    private List<Movie?> movieData = new List<Movie?>();

    protected override async Task OnInitializedAsync()
    {
        var authstate = await ApiAuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authstate.User;
        var userIdClaim = user.FindFirst(c => c.Type == "userId")?.Value;

        if (!string.IsNullOrEmpty(userIdClaim))
        {
            try
            {
                var orderclaim = new Order
                {
                    Id = " ",
                    UserId = userIdClaim
                };
                var jsonContent = JsonContent.Create(orderclaim);
                var response = await Http.PostAsync("http://localhost:5003/Gateway/orders/getorder/", jsonContent);
                orderData = await response.Content.ReadFromJsonAsync<List<Order>>();

                if (orderData != null)
                {
                    var movieIds = orderData.Where(o => o != null).Select(o => o.MovieId).Distinct();
                    foreach (var movieId in movieIds)
                    {
                        var moviejson = new Movie
                        {
                            Id = movieId
                        };
                        var moviejsonContent = JsonContent.Create(moviejson);
                        var movieresponse = await Http.PostAsync("http://localhost:5003/gateway/Movies/byId/", moviejsonContent);
                        var movie = await movieresponse.Content.ReadFromJsonAsync<Movie>();
                        Console.WriteLine(movie);
                        if (movie != null)
                        {
                            movieData.Add(movie);
                        }
                    }
                }
            }
            catch (Exception ex)
            {
                orderData = new List<Order?>();
            }
        }
        else
        {
            orderData = new List<Order?>();
        }
    }
}

